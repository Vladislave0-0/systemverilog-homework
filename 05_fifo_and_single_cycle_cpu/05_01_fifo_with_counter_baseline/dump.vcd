$date
	Mon Apr 28 16:55:13 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 8 ! read_data [7:0] $end
$var wire 1 " full $end
$var wire 1 # empty $end
$var parameter 32 $ allow_push_when_full_with_pop $end
$var parameter 32 % fifo_depth $end
$var parameter 32 & fifo_width $end
$var reg 1 ' clk $end
$var reg 1 ( pop $end
$var reg 1 ) push $end
$var reg 1 * rst $end
$var reg 8 + write_data [7:0] $end
$scope module monitor $end
$var wire 1 ' clk $end
$var wire 1 ( pop $end
$var wire 1 ) push $end
$var wire 1 * rst $end
$var wire 8 , write_data [7:0] $end
$var wire 8 - read_data [7:0] $end
$var wire 1 " full $end
$var wire 1 # empty $end
$var parameter 32 . allow_push_when_full_with_pop $end
$var parameter 32 / depth $end
$var parameter 32 0 width $end
$var reg 1 1 was_reset $end
$scope begin $ivl_for_loop0 $end
$var integer 32 2 i [31:0] $end
$upscope $end
$upscope $end
$scope module rtl $end
$var wire 1 ' clk $end
$var wire 1 ( pop $end
$var wire 1 ) push $end
$var wire 8 3 read_data [7:0] $end
$var wire 1 * rst $end
$var wire 8 4 write_data [7:0] $end
$var wire 1 " full $end
$var wire 1 # empty $end
$var parameter 32 5 counter_width $end
$var parameter 32 6 depth $end
$var parameter 3 7 max_ptr $end
$var parameter 32 8 pointer_width $end
$var parameter 32 9 width $end
$var reg 3 : cnt [2:0] $end
$var reg 3 ; rd_ptr [2:0] $end
$var reg 3 < wr_ptr [2:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 = i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop2 $end
$var integer 32 > i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop3 $end
$var integer 32 ? i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 9
b11 8
b100 7
b101 6
b11 5
b1000 0
b101 /
b1 .
b1000 &
b101 %
b1 $
$end
#0
$dumpvars
b0 ?
b0 >
b0 =
bx <
bx ;
bx :
bx 4
bx 3
b0 2
01
bx -
bx ,
bx +
x*
0)
0(
0'
x#
x"
bx !
$end
#5
1'
#10
0'
#15
1'
#20
0'
#25
1#
0"
b0 :
b0 ;
b0 <
1*
1'
#30
0'
#35
11
1'
#40
0'
#45
1'
#50
0'
#55
b0 +
b0 ,
b0 4
1)
0*
1'
#60
0'
#65
0#
b1 :
b1 <
b0 !
b0 -
b0 3
b10001 +
b10001 ,
b10001 4
b1 2
b1 =
1'
#70
0'
#75
b10 <
b10 :
b100010 +
b100010 ,
b100010 4
b10 2
b10 =
1'
#80
0'
#85
b11 :
b11 <
b110011 +
b110011 ,
b110011 4
b11 2
b11 =
1'
#90
0'
#95
b100 <
b100 :
b1000100 +
b1000100 ,
b1000100 4
b100 2
b100 =
1'
#100
0'
#105
1"
b101 :
b0 <
1(
0)
b101 2
b101 =
1'
#110
0'
#115
b10001 !
b10001 -
b10001 3
b1 ;
0"
b100 :
b100 2
1'
#120
0'
#125
b11 :
b100010 !
b100010 -
b100010 3
b10 ;
b11 2
1'
#130
0'
#135
b110011 !
b110011 -
b110011 3
b11 ;
b10 :
b10 2
1'
#140
0'
#145
b1 :
b1000100 !
b1000100 -
b1000100 3
b100 ;
b1 2
1'
#150
0'
#155
b0 !
b0 -
b0 3
b0 ;
1#
b0 :
0(
b0 2
1'
#160
0'
#165
1'
#170
0'
#175
b0 +
b0 ,
b0 4
1)
1'
#180
0'
#185
0#
b1 :
b1 <
b10001 +
b10001 ,
b10001 4
b1 2
b1 >
1'
#190
0'
#195
b10 <
b10 :
b0 +
b0 ,
b0 4
1(
b10 2
b10 >
1'
#200
0'
#205
b10001 !
b10001 -
b10001 3
b1 ;
b11 <
b10001 +
b10001 ,
b10001 4
b10 2
b1 ?
1'
#210
0'
#215
b100 <
b0 !
b0 -
b0 3
b10 ;
b100010 +
b100010 ,
b100010 4
b10 2
b10 ?
1'
#220
0'
#225
b10001 !
b10001 -
b10001 3
b11 ;
b0 <
b110011 +
b110011 ,
b110011 4
b10 2
b11 ?
1'
#230
0'
#235
b1 <
b100010 !
b100010 -
b100010 3
b100 ;
b1000100 +
b1000100 ,
b1000100 4
b10 2
b100 ?
1'
#240
0'
#245
b110011 !
b110011 -
b110011 3
b0 ;
b10 <
b0 +
b0 ,
b0 4
b10 2
b0 ?
1'
#250
0'
#255
b11 <
b1000100 !
b1000100 -
b1000100 3
b1 ;
b10001 +
b10001 ,
b10001 4
b10 2
b1 ?
1'
#260
0'
#265
b0 !
b0 -
b0 3
b10 ;
b100 <
b100010 +
b100010 ,
b100010 4
b10 2
b10 ?
1'
#270
0'
#275
b0 <
b10001 !
b10001 -
b10001 3
b11 ;
b110011 +
b110011 ,
b110011 4
b10 2
b11 ?
1'
#280
0'
#285
b100010 !
b100010 -
b100010 3
b100 ;
b1 <
b1000100 +
b1000100 ,
b1000100 4
b10 2
b100 ?
1'
#290
0'
#295
b10 <
b110011 !
b110011 -
b110011 3
b0 ;
b0 +
b0 ,
b0 4
b10 2
b0 ?
1'
#300
0'
#305
b1000100 !
b1000100 -
b1000100 3
b1 ;
b11 <
b10001 +
b10001 ,
b10001 4
b10 2
b1 ?
1'
#310
0'
#315
b100 <
b0 !
b0 -
b0 3
b10 ;
b100010 +
b100010 ,
b100010 4
b10 2
b10 ?
1'
#320
0'
#325
b10001 !
b10001 -
b10001 3
b11 ;
b0 <
b110011 +
b110011 ,
b110011 4
b10 2
b11 ?
1'
#330
0'
#335
b1 <
b100010 !
b100010 -
b100010 3
b100 ;
b1000100 +
b1000100 ,
b1000100 4
b10 2
b100 ?
1'
#340
0'
#345
b110011 !
b110011 -
b110011 3
b0 ;
b10 <
b0 +
b0 ,
b0 4
b10 2
b0 ?
1'
#350
0'
#355
b11 <
b1000100 !
b1000100 -
b1000100 3
b1 ;
b10001 +
b10001 ,
b10001 4
b10 2
b1 ?
1'
#360
0'
#365
b0 !
b0 -
b0 3
b10 ;
b100 <
b100010 +
b100010 ,
b100010 4
b10 2
b10 ?
1'
#370
0'
#375
b0 <
b10001 !
b10001 -
b10001 3
b11 ;
b110011 +
b110011 ,
b110011 4
b10 2
b11 ?
1'
#380
0'
#385
b100010 !
b100010 -
b100010 3
b100 ;
b1 <
b1000100 +
b1000100 ,
b1000100 4
b10 2
b100 ?
1'
#390
0'
#395
b10 <
b110011 !
b110011 -
b110011 3
b0 ;
b0 +
b0 ,
b0 4
b10 2
b0 ?
1'
#400
0'
#405
b1000100 !
b1000100 -
b1000100 3
b1 ;
b11 <
b10001 +
b10001 ,
b10001 4
b10 2
b1 ?
1'
#410
0'
#415
b100 <
b0 !
b0 -
b0 3
b10 ;
b100010 +
b100010 ,
b100010 4
b10 2
b10 ?
1'
#420
0'
#425
b10001 !
b10001 -
b10001 3
b11 ;
b0 <
b110011 +
b110011 ,
b110011 4
b10 2
b11 ?
1'
#430
0'
#435
b1 <
b100010 !
b100010 -
b100010 3
b100 ;
b1000100 +
b1000100 ,
b1000100 4
b10 2
b100 ?
1'
#440
0'
#445
b110011 !
b110011 -
b110011 3
b0 ;
b10 <
0)
b10 2
b101 ?
1'
#450
0'
#455
b1000100 !
b1000100 -
b1000100 3
b1 ;
b1 :
b1 2
1'
#460
0'
#465
1#
b0 :
b0 !
b0 -
b0 3
b10 ;
b0 2
1'
#466
0(
#470
0'
#475
1'
#480
0'
#485
1'
#490
0'
#495
1'
#500
0'
#505
1'
#510
0'
#515
1'
#520
0'
#525
1'
#530
0'
#535
1'
#540
0'
#545
1'
#546
b1100011 +
b1100011 ,
b1100011 4
1)
#550
0'
#555
b11 <
0#
b1 :
b1100011 !
b1100011 -
b1100011 3
b1 2
1'
#556
b10010 +
b10010 ,
b10010 4
1)
#560
0'
#565
b10 :
b100 <
b10 2
1'
#566
0)
#570
0'
#575
1'
#580
0'
#585
1'
#586
b10101010 +
b10101010 ,
b10101010 4
1)
1(
#590
0'
#595
b0 <
b10010 !
b10010 -
b10010 3
b11 ;
b10 2
1'
#596
b10001111 +
b10001111 ,
b10001111 4
1)
1(
#600
0'
#605
b10101010 !
b10101010 -
b10101010 3
b100 ;
b1 <
b10 2
1'
#606
b11000101 +
b11000101 ,
b11000101 4
1)
1(
#610
0'
#615
b10 <
b10001111 !
b10001111 -
b10001111 3
b0 ;
b10 2
1'
#616
b1100101 +
b1100101 ,
b1100101 4
1)
1(
#620
0'
#625
b11000101 !
b11000101 -
b11000101 3
b1 ;
b11 <
b10 2
1'
#626
b100000 +
b100000 ,
b100000 4
1)
0(
#630
0'
#635
b100 <
b11 :
b11 2
1'
#636
b10011 +
b10011 ,
b10011 4
1(
1)
#640
0'
#645
b1100101 !
b1100101 -
b1100101 3
b10 ;
b0 <
b11 2
1'
#646
0)
1(
#650
0'
#655
b100000 !
b100000 -
b100000 3
b11 ;
b10 :
b10 2
1'
#656
b11101 +
b11101 ,
b11101 4
1)
1(
#660
0'
#665
b10011 !
b10011 -
b10011 3
b100 ;
b1 <
b10 2
1'
#666
b11001010 +
b11001010 ,
b11001010 4
1)
0(
#670
0'
#675
b10 <
b11 :
b11 2
1'
#676
0)
#680
0'
#685
1'
#686
1(
#690
0'
#695
b11101 !
b11101 -
b11101 3
b0 ;
b10 :
b10 2
1'
#696
0(
#700
0'
#705
1'
#706
b101010 +
b101010 ,
b101010 4
1)
#710
0'
#715
b11 <
b11 :
b11 2
1'
#716
1(
0)
#720
0'
#725
b10 :
b11001010 !
b11001010 -
b11001010 3
b1 ;
b10 2
1'
#726
1(
#730
0'
#735
b101010 !
b101010 -
b101010 3
b10 ;
b1 :
b1 2
1'
#736
0(
#740
0'
#745
1'
#750
0'
#755
1'
#760
0'
#765
1'
#766
b1011011 +
b1011011 ,
b1011011 4
1)
1(
#770
0'
#775
b100 <
b1011011 !
b1011011 -
b1011011 3
b11 ;
b1 2
1'
#776
b11010111 +
b11010111 ,
b11010111 4
1)
1(
#780
0'
#785
b11010111 !
b11010111 -
b11010111 3
b100 ;
b0 <
b1 2
1'
#786
b11000010 +
b11000010 ,
b11000010 4
1)
0(
#790
0'
#795
b1 <
b10 :
b10 2
1'
#796
1(
0)
#800
0'
#805
b1 :
b11000010 !
b11000010 -
b11000010 3
b0 ;
b1 2
1'
#806
1(
#810
0'
#815
b11001010 !
b11001010 -
b11001010 3
b1 ;
1#
b0 :
b0 2
1'
#816
b10000101 +
b10000101 ,
b10000101 4
1)
0(
#820
0'
#825
0#
b1 :
b10 <
b10000101 !
b10000101 -
b10000101 3
b1 2
1'
#826
0)
#830
0'
#835
1'
#840
0'
#845
1'
#846
b11111010 +
b11111010 ,
b11111010 4
1)
1(
#850
0'
#855
b11 <
b11111010 !
b11111010 -
b11111010 3
b10 ;
b1 2
1'
#856
b101111 +
b101111 ,
b101111 4
1)
0(
#860
0'
#865
b10 :
b100 <
b10 2
1'
#866
1(
0)
#870
0'
#875
b101111 !
b101111 -
b101111 3
b11 ;
b1 :
b1 2
1'
#876
b1011010 +
b1011010 ,
b1011010 4
1)
1(
#880
0'
#885
b1011010 !
b1011010 -
b1011010 3
b100 ;
b0 <
b1 2
1'
#886
b1100101 +
b1100101 ,
b1100101 4
1)
1(
#890
0'
#895
b1 <
b1100101 !
b1100101 -
b1100101 3
b0 ;
b1 2
1'
#896
0)
1(
#900
0'
#905
1#
b0 :
b10000101 !
b10000101 -
b10000101 3
b1 ;
b0 2
1'
#906
b10101011 +
b10101011 ,
b10101011 4
1)
0(
#910
0'
#915
b10 <
0#
b1 :
b10101011 !
b10101011 -
b10101011 3
b1 2
1'
#916
b11111101 +
b11111101 ,
b11111101 4
1)
#920
0'
#925
b10 :
b11 <
b10 2
1'
#926
0)
#930
0'
#935
1'
#936
1(
#940
0'
#945
b1 :
b11111101 !
b11111101 -
b11111101 3
b10 ;
b1 2
1'
#946
b10010100 +
b10010100 ,
b10010100 4
1)
0(
#950
0'
#955
b100 <
b10 :
b10 2
1'
#956
b11011011 +
b11011011 ,
b11011011 4
1(
1)
#960
0'
#965
b10010100 !
b10010100 -
b10010100 3
b11 ;
b0 <
b10 2
1'
#966
b1110110 +
b1110110 ,
b1110110 4
1)
0(
#970
0'
#975
b1 <
b11 :
b11 2
1'
#976
0)
#980
0'
#985
1'
#990
0'
#995
1'
#996
1(
#1000
0'
#1005
b10 :
b11011011 !
b11011011 -
b11011011 3
b100 ;
b10 2
1'
#1006
b101110 +
b101110 ,
b101110 4
1)
1(
#1010
0'
#1015
b10 <
b1110110 !
b1110110 -
b1110110 3
b0 ;
b10 2
1'
#1016
b101001 +
b101001 ,
b101001 4
1)
0(
#1020
0'
#1025
b11 :
b11 <
b11 2
1'
#1026
b111101 +
b111101 ,
b111101 4
1)
#1030
0'
#1035
b100 <
b100 :
b100 2
1'
#1036
b10111010 +
b10111010 ,
b10111010 4
1(
1)
#1040
0'
#1045
b101110 !
b101110 -
b101110 3
b1 ;
b0 <
b100 2
1'
#1046
0)
0(
#1050
0'
#1055
1'
#1056
1(
#1060
0'
#1065
b11 :
b101001 !
b101001 -
b101001 3
b10 ;
b11 2
1'
#1066
b10110110 +
b10110110 ,
b10110110 4
1)
0(
#1070
0'
#1075
b1 <
b100 :
b100 2
1'
#1076
0)
#1080
0'
#1085
1'
#1086
b11001111 +
b11001111 ,
b11001111 4
1)
#1090
0'
#1095
b10 <
1"
b101 :
b101 2
1'
#1096
1(
0)
#1100
0'
#1105
0"
b100 :
b111101 !
b111101 -
b111101 3
b11 ;
b100 2
1'
#1106
1(
#1110
0'
#1115
b10111010 !
b10111010 -
b10111010 3
b100 ;
b11 :
b11 2
1'
#1116
b101001 +
b101001 ,
b101001 4
1)
0(
#1120
0'
#1125
b100 :
b11 <
b100 2
1'
#1126
b1001011 +
b1001011 ,
b1001011 4
1(
1)
#1130
0'
#1135
b100 <
b10110110 !
b10110110 -
b10110110 3
b0 ;
b100 2
1'
#1136
b1001110 +
b1001110 ,
b1001110 4
1)
1(
#1140
0'
#1145
b11001111 !
b11001111 -
b11001111 3
b1 ;
b0 <
b100 2
1'
#1146
b1110 +
b1110 ,
b1110 4
1)
0(
#1150
0'
#1155
b1 <
1"
b101 :
b101 2
1'
#1156
1(
0)
#1160
0'
#1165
0"
b100 :
b101001 !
b101001 -
b101001 3
b10 ;
b100 2
1'
#1166
1(
#1170
0'
#1175
b1001011 !
b1001011 -
b1001011 3
b11 ;
b11 :
b11 2
1'
#1176
1(
#1180
0'
#1185
b10 :
b1001110 !
b1001110 -
b1001110 3
b100 ;
b10 2
1'
#1186
0(
#1190
0'
#1195
1'
#1200
0'
#1205
1'
#1210
0'
#1215
1'
#1216
b11111010 +
b11111010 ,
b11111010 4
1)
#1220
0'
#1225
b11 :
b10 <
b11 2
1'
#1226
b10000100 +
b10000100 ,
b10000100 4
1)
#1230
0'
#1235
b11 <
b100 :
b100 2
1'
#1236
0)
#1240
0'
#1245
1'
#1246
b1011 +
b1011 ,
b1011 4
1)
#1250
0'
#1255
b100 <
1"
b101 :
b101 2
1'
#1256
0)
#1260
0'
#1265
1'
#1266
b10001111 +
b10001111 ,
b10001111 4
1)
1(
#1270
0'
#1275
b0 <
b0 ;
b1110 !
b1110 -
b1110 3
b101 2
1'
#1276
b10011011 +
b10011011 ,
b10011011 4
1)
1(
#1280
0'
#1285
b1 ;
b1 <
b11111010 !
b11111010 -
b11111010 3
b101 2
1'
#1286
b1001011 +
b1001011 ,
b1001011 4
1)
1(
#1290
0'
#1295
b10 <
b10 ;
b10000100 !
b10000100 -
b10000100 3
b101 2
1'
#1296
0)
0(
#1300
0'
#1305
1'
#1306
1(
#1310
0'
#1315
b1011 !
b1011 -
b1011 3
b11 ;
0"
b100 :
b100 2
1'
#1316
0(
#1320
0'
#1325
1'
#1326
b100 +
b100 ,
b100 4
1)
1(
#1330
0'
#1335
b11 <
b10001111 !
b10001111 -
b10001111 3
b100 ;
b100 2
1'
#1336
b10111000 +
b10111000 ,
b10111000 4
1)
1(
#1340
0'
#1345
b10011011 !
b10011011 -
b10011011 3
b0 ;
b100 <
b100 2
1'
#1346
b101011 +
b101011 ,
b101011 4
1)
1(
#1350
0'
#1355
b0 <
b1001011 !
b1001011 -
b1001011 3
b1 ;
b100 2
1'
#1356
b10100001 +
b10100001 ,
b10100001 4
1)
0(
#1360
0'
#1365
1"
b101 :
b1 <
b101 2
1'
#1366
b100 +
b100 ,
b100 4
1(
1)
#1370
0'
#1375
b10 <
b10 ;
b100 !
b100 -
b100 3
b101 2
1'
#1376
0)
1(
#1380
0'
#1385
0"
b100 :
b10111000 !
b10111000 -
b10111000 3
b11 ;
b100 2
1'
#1386
b101011 +
b101011 ,
b101011 4
1)
0(
#1390
0'
#1395
b11 <
1"
b101 :
b101 2
1'
#1396
0)
#1400
0'
#1405
1'
#1406
1(
#1410
0'
#1415
b101011 !
b101011 -
b101011 3
b100 ;
0"
b100 :
b100 2
1'
#1416
1(
#1420
0'
#1425
b11 :
b10100001 !
b10100001 -
b10100001 3
b0 ;
b11 2
1'
#1426
b101010 +
b101010 ,
b101010 4
1)
0(
#1430
0'
#1435
b100 <
b100 :
b100 2
1'
#1436
1(
0)
#1440
0'
#1445
b11 :
b100 !
b100 -
b100 3
b1 ;
b11 2
1'
#1446
b1101000 +
b1101000 ,
b1101000 4
1)
1(
#1450
0'
#1455
b0 <
b101011 !
b101011 -
b101011 3
b10 ;
b11 2
1'
#1456
0)
0(
#1460
0'
#1465
1'
#1466
b11110110 +
b11110110 ,
b11110110 4
1)
#1470
0'
#1475
b1 <
b100 :
b100 2
1'
#1476
0)
#1480
0'
#1485
1'
#1486
1(
#1490
0'
#1495
b101010 !
b101010 -
b101010 3
b11 ;
b11 :
b11 2
1'
#1496
b11100001 +
b11100001 ,
b11100001 4
1)
0(
#1500
0'
#1505
b100 :
b10 <
b100 2
1'
#1506
1(
0)
#1510
0'
#1515
b1101000 !
b1101000 -
b1101000 3
b100 ;
b11 :
b11 2
1'
#1516
0(
#1520
0'
#1525
1'
#1526
b101100 +
b101100 ,
b101100 4
1)
1(
#1530
0'
#1535
b11 <
b11110110 !
b11110110 -
b11110110 3
b0 ;
b11 2
1'
#1536
b10110110 +
b10110110 ,
b10110110 4
1)
1(
