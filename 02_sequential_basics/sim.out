#! /usr/bin/vvp
:ivl_version "12.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/system.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/va_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2009.vpi";
S_0x5fe4c5a35240 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x5fe4c5a353d0 .scope module, "testbench" "testbench" 3 3;
 .timescale 0 0;
P_0x5fe4c59f8490 .param/l "in_cnt_w" 1 3 38, +C4<00000000000000000000000000001010>;
P_0x5fe4c59f84d0 .param/l "n_inputs" 1 3 35, +C4<0000000000000000000000000000000000000000000000000000001100100000>;
P_0x5fe4c59f8510 .param/l "n_outputs" 1 3 34, +C4<00000000000000000000000001100100>;
P_0x5fe4c59f8550 .param/l "out_cnt_w" 1 3 40, +C4<00000000000000000000000000000111>;
P_0x5fe4c59f8590 .param/l "width" 1 3 32, +C4<00000000000000000000000000001000>;
v0x5fe4c5a608f0_0 .var "clk", 0 0;
v0x5fe4c5a609b0_0 .var/2s "current_inputs", 31 0;
v0x5fe4c5a60a70_0 .var "d_serial_data", 0 0;
v0x5fe4c5a60b40_0 .var "d_serial_valid", 0 0;
v0x5fe4c5a60c00_0 .var "in_vld_cnt", 9 0;
v0x5fe4c5a60ce0_0 .var "out_vld_cnt", 6 0;
v0x5fe4c5a60dc0_0 .net "parallel_data", 7 0, v0x5fe4c5a2b650_0;  1 drivers
v0x5fe4c5a60e80_0 .var "parallel_data_expected", 7 0;
v0x5fe4c5a60f40_0 .net "parallel_valid", 0 0, L_0x5fe4c5a24b20;  1 drivers
v0x5fe4c5a610a0_0 .var/queue "queue", 1;
v0x5fe4c5a61140_0 .var "rst", 0 0;
v0x5fe4c5a61210_0 .var "serial_data", 0 0;
v0x5fe4c5a612e0_0 .var "serial_valid", 0 0;
v0x5fe4c5a613b0_0 .var/2u "was_reset", 0 0;
E_0x5fe4c59f8c80 .event negedge, v0x5fe4c5a60530_0;
S_0x5fe4c5a2dd90 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 3 94, 3 94 0, S_0x5fe4c5a353d0;
 .timescale 0 0;
v0x5fe4c5a24cc0_0 .var/2s "i", 31 0;
S_0x5fe4c5a600d0 .scope module, "dut" "serial_to_parallel" 3 51, 4 5 0, S_0x5fe4c5a353d0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "rst";
    .port_info 2 /INPUT 1 "serial_valid";
    .port_info 3 /INPUT 1 "serial_data";
    .port_info 4 /OUTPUT 1 "parallel_valid";
    .port_info 5 /OUTPUT 8 "parallel_data";
P_0x5fe4c5a602d0 .param/l "width" 0 4 7, +C4<00000000000000000000000000001000>;
L_0x5fe4c5a24b20 .functor BUFZ 1, v0x5fe4c5a60770_0, C4<0>, C4<0>, C4<0>;
v0x5fe4c5a29db0_0 .var "buff", 7 0;
v0x5fe4c5a2b0f0_0 .net "clk", 0 0, v0x5fe4c5a608f0_0;  1 drivers
v0x5fe4c5a2b440_0 .var "idx", 2 0;
v0x5fe4c5a2b650_0 .var "parallel_data", 7 0;
v0x5fe4c5a23440_0 .net "parallel_valid", 0 0, L_0x5fe4c5a24b20;  alias, 1 drivers
v0x5fe4c5a60530_0 .net "rst", 0 0, v0x5fe4c5a61140_0;  1 drivers
v0x5fe4c5a605f0_0 .net "serial_data", 0 0, v0x5fe4c5a61210_0;  1 drivers
v0x5fe4c5a606b0_0 .net "serial_valid", 0 0, v0x5fe4c5a612e0_0;  1 drivers
v0x5fe4c5a60770_0 .var "vld", 0 0;
E_0x5fe4c59f8ed0 .event anyedge, v0x5fe4c5a60770_0, v0x5fe4c5a29db0_0;
E_0x5fe4c5a32bb0 .event posedge, v0x5fe4c5a2b0f0_0;
    .scope S_0x5fe4c5a600d0;
T_0 ;
    %wait E_0x5fe4c5a32bb0;
    %load/vec4 v0x5fe4c5a60530_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.0, 8;
    %pushi/vec4 0, 0, 11;
    %split/vec4 8;
    %assign/vec4 v0x5fe4c5a29db0_0, 0;
    %assign/vec4 v0x5fe4c5a2b440_0, 0;
    %jmp T_0.1;
T_0.0 ;
    %load/vec4 v0x5fe4c5a606b0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.2, 8;
    %load/vec4 v0x5fe4c5a2b440_0;
    %addi 1, 0, 3;
    %load/vec4 v0x5fe4c5a605f0_0;
    %concat/vec4; draw_concat_vec4
    %split/vec4 1;
    %ix/load 5, 0, 0;
    %ix/getv 4, v0x5fe4c5a2b440_0;
    %assign/vec4/off/d v0x5fe4c5a29db0_0, 4, 5;
    %assign/vec4 v0x5fe4c5a2b440_0, 0;
T_0.2 ;
T_0.1 ;
    %jmp T_0;
    .thread T_0;
    .scope S_0x5fe4c5a600d0;
T_1 ;
    %wait E_0x5fe4c5a32bb0;
    %load/vec4 v0x5fe4c5a60530_0;
    %load/vec4 v0x5fe4c5a60770_0;
    %or;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x5fe4c5a60770_0, 0;
    %jmp T_1.1;
T_1.0 ;
    %load/vec4 v0x5fe4c5a606b0_0;
    %load/vec4 v0x5fe4c5a2b440_0;
    %pad/u 32;
    %pushi/vec4 7, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %and;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.2, 8;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x5fe4c5a60770_0, 0;
T_1.2 ;
T_1.1 ;
    %jmp T_1;
    .thread T_1;
    .scope S_0x5fe4c5a600d0;
T_2 ;
Ewait_0 .event/or E_0x5fe4c59f8ed0, E_0x0;
    %wait Ewait_0;
    %load/vec4 v0x5fe4c5a60770_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.0, 8;
    %load/vec4 v0x5fe4c5a29db0_0;
    %store/vec4 v0x5fe4c5a2b650_0, 0, 8;
T_2.0 ;
    %jmp T_2;
    .thread T_2, $push;
    .scope S_0x5fe4c5a353d0;
T_3 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5fe4c5a613b0_0, 0, 1;
    %end;
    .thread T_3, $init;
    .scope S_0x5fe4c5a353d0;
T_4 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x5fe4c5a608f0_0, 0, 1;
T_4.0 ;
    %delay 500, 0;
    %load/vec4 v0x5fe4c5a608f0_0;
    %inv;
    %store/vec4 v0x5fe4c5a608f0_0, 0, 1;
    %jmp T_4.0;
    %end;
    .thread T_4;
    .scope S_0x5fe4c5a353d0;
T_5 ;
    %pushi/vec4 1, 1, 1;
    %assign/vec4 v0x5fe4c5a61140_0, 0;
    %pushi/vec4 2, 0, 32;
T_5.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.1, 5;
    %jmp/1 T_5.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x5fe4c5a32bb0;
    %jmp T_5.0;
T_5.1 ;
    %pop/vec4 1;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x5fe4c5a61140_0, 0;
    %pushi/vec4 2, 0, 32;
T_5.2 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_5.3, 5;
    %jmp/1 T_5.3, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %wait E_0x5fe4c5a32bb0;
    %jmp T_5.2;
T_5.3 ;
    %pop/vec4 1;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x5fe4c5a61140_0, 0;
    %end;
    .thread T_5;
    .scope S_0x5fe4c5a353d0;
T_6 ;
    %wait E_0x5fe4c5a32bb0;
    %load/vec4 v0x5fe4c5a61140_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_6.0, 8;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0x5fe4c5a613b0_0, 0;
    %pushi/vec4 0, 0, 7;
    %assign/vec4 v0x5fe4c5a60ce0_0, 0;
    %pushi/vec4 0, 0, 10;
    %assign/vec4 v0x5fe4c5a60c00_0, 0;
    %ix/load 4, 0, 0;
    %null;
    %store/obj v0x5fe4c5a610a0_0;
    %jmp T_6.1;
T_6.0 ;
    %load/vec4 v0x5fe4c5a613b0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_6.2, 8;
    %load/vec4 v0x5fe4c5a612e0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_6.4, 8;
    %load/vec4 v0x5fe4c5a60c00_0;
    %addi 1, 0, 10;
    %assign/vec4 v0x5fe4c5a60c00_0, 0;
    %ix/load 4, 0, 0;
    %load/vec4 v0x5fe4c5a61210_0;
    %store/qb/v v0x5fe4c5a610a0_0, 4, 1;
T_6.4 ;
    %load/vec4 v0x5fe4c5a60f40_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_6.6, 8;
    %load/vec4 v0x5fe4c5a60ce0_0;
    %addi 1, 0, 7;
    %assign/vec4 v0x5fe4c5a60ce0_0, 0;
    %vpi_func 3 83 "$size" 32, v0x5fe4c5a610a0_0 {0 0 0};
    %cmpi/s 8, 0, 32;
    %jmp/0xz  T_6.8, 5;
    %vpi_call/w 3 85 "$display", "FAIL %s", "02_10_serial_to_parallel/testbench.sv" {0 0 0};
    %vpi_func 3 88 "$size" 32, v0x5fe4c5a610a0_0 {0 0 0};
    %vpi_func/s 3 88 "$sformatf", "queue.size ():%0d", S<0,vec4,s32> {1 0 0};
    %vpi_func/s 3 88 "$sformatf", "width:%0d", P_0x5fe4c59f8590 {0 0 0};
    %vpi_call/w 3 87 "$display", "++ TEST     => {%s, %s}", S<1,str>, S<0,str> {0 0 2};
    %vpi_call/w 3 90 "$finish", 32'sb00000000000000000000000000000001 {0 0 0};
    %jmp T_6.9;
T_6.8 ;
    %fork t_1, S_0x5fe4c5a2dd90;
    %jmp t_0;
    .scope S_0x5fe4c5a2dd90;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x5fe4c5a24cc0_0, 0, 32;
T_6.10 ;
    %load/vec4 v0x5fe4c5a24cc0_0;
    %cmpi/s 8, 0, 32;
    %jmp/0xz T_6.11, 5;
    %qpop/f/v v0x5fe4c5a610a0_0, 1;
    %ix/getv/s 4, v0x5fe4c5a24cc0_0;
    %store/vec4 v0x5fe4c5a60e80_0, 4, 1;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5fe4c5a24cc0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0x5fe4c5a24cc0_0, 0, 32;
    %jmp T_6.10;
T_6.11 ;
    %end;
    .scope S_0x5fe4c5a353d0;
t_0 %join;
    %load/vec4 v0x5fe4c5a60dc0_0;
    %load/vec4 v0x5fe4c5a60e80_0;
    %cmp/ne;
    %jmp/0xz  T_6.12, 6;
    %vpi_call/w 3 101 "$display", "FAIL %s", "02_10_serial_to_parallel/testbench.sv" {0 0 0};
    %vpi_func/s 3 104 "$sformatf", "parallel_data:%h", v0x5fe4c5a60dc0_0 {0 0 0};
    %vpi_func/s 3 104 "$sformatf", "parallel_data_expected:%h", v0x5fe4c5a60e80_0 {0 0 0};
    %vpi_call/w 3 103 "$display", "++ TEST     => {%s, %s}", S<1,str>, S<0,str> {0 0 2};
    %vpi_call/w 3 106 "$finish", 32'sb00000000000000000000000000000001 {0 0 0};
T_6.12 ;
T_6.9 ;
T_6.6 ;
T_6.2 ;
T_6.1 ;
    %jmp T_6;
    .thread T_6;
    .scope S_0x5fe4c5a353d0;
T_7 ;
    %pushi/vec4 0, 0, 2;
    %split/vec4 1;
    %assign/vec4 v0x5fe4c5a61210_0, 0;
    %assign/vec4 v0x5fe4c5a612e0_0, 0;
    %wait E_0x5fe4c59f8c80;
T_7.0 ;
    %load/vec4 v0x5fe4c5a609b0_0;
    %pad/s 64;
    %cmpi/ne 800, 0, 64;
    %jmp/0xz T_7.1, 4;
    %load/vec4 v0x5fe4c5a609b0_0;
    %cmpi/s 20, 0, 32;
    %flag_or 5, 4;
    %jmp/0xz  T_7.2, 5;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x5fe4c5a60b40_0, 0, 1;
    %load/vec4 v0x5fe4c5a61210_0;
    %inv;
    %store/vec4 v0x5fe4c5a60a70_0, 0, 1;
    %jmp T_7.3;
T_7.2 ;
    %vpi_func 3 142 "$urandom" 32 {0 0 0};
    %pad/u 1;
    %store/vec4 v0x5fe4c5a60b40_0, 0, 1;
    %vpi_func 3 143 "$urandom" 32 {0 0 0};
    %pad/u 1;
    %store/vec4 v0x5fe4c5a60a70_0, 0, 1;
T_7.3 ;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0x5fe4c5a609b0_0;
    %load/vec4 v0x5fe4c5a60b40_0;
    %pad/u 32;
    %cast2;
    %add;
    %cast2;
    %store/vec4 v0x5fe4c5a609b0_0, 0, 32;
    %load/vec4 v0x5fe4c5a60b40_0;
    %load/vec4 v0x5fe4c5a60a70_0;
    %concat/vec4; draw_concat_vec4
    %split/vec4 1;
    %assign/vec4 v0x5fe4c5a61210_0, 0;
    %assign/vec4 v0x5fe4c5a612e0_0, 0;
    %wait E_0x5fe4c5a32bb0;
    %jmp T_7.0;
T_7.1 ;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x5fe4c5a612e0_0, 0;
    %wait E_0x5fe4c5a32bb0;
    %wait E_0x5fe4c5a32bb0;
    %load/vec4 v0x5fe4c5a60ce0_0;
    %pad/u 32;
    %muli 8, 0, 32;
    %pad/u 10;
    %load/vec4 v0x5fe4c5a60c00_0;
    %cmp/ne;
    %jmp/0xz  T_7.4, 6;
    %vpi_call/w 3 161 "$display", "FAIL %s", "02_10_serial_to_parallel/testbench.sv" {0 0 0};
    %load/vec4 v0x5fe4c5a60ce0_0;
    %pad/u 32;
    %muli 8, 0, 32;
    %vpi_func/s 3 163 "$sformatf", "out_vld_cnt*width:%0d", S<0,vec4,u32> {1 0 0};
    %vpi_func/s 3 163 "$sformatf", "in_vld_cnt:%0d", v0x5fe4c5a60c00_0 {0 0 0};
    %vpi_call/w 3 163 "$display", "++ TEST     => {%s != %s}", S<1,str>, S<0,str> {0 0 2};
    %vpi_call/w 3 164 "$display", "++ EXPECTED => out_vld_cnt * width == in_vld_cnt" {0 0 0};
    %vpi_call/w 3 166 "$finish", 32'sb00000000000000000000000000000001 {0 0 0};
T_7.4 ;
    %vpi_call/w 3 169 "$display", "PASS %s", "02_10_serial_to_parallel/testbench.sv" {0 0 0};
    %vpi_call/w 3 170 "$finish" {0 0 0};
    %end;
    .thread T_7;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "02_10_serial_to_parallel/testbench.sv";
    "02_10_serial_to_parallel/02_10_serial_to_parallel.sv";
